---
import LanguageSelector from '../../../components/LanguageSelector.astro';
import CopyMarkdownButton from '../../../components/CopyMarkdownButton.astro';
import LanguageContent from '../../../components/LanguageContent.astro';

import TableOfContents from '../../../components/TableOfContents.astro';

import { Content as JsContent, getHeadings as jsHeadings } from '../js/models.mdx';
import { Content as GoContent, getHeadings as goHeadings } from '../go/docs/models.md';
import { Content as PyContent, getHeadings as pyHeadings } from '../python/docs/reference/models.md';

const addPrefix = (headings: { slug: string, text: string, depth: number }[], prefix: string) => {
  return headings.map(h => ({ ...h, slug: `${prefix}-${h.slug}` }));
}
---

<div style="display: flex; justify-content: space-between; align-items: center; gap: 1rem; margin: 1rem 0 1rem 0;">
  <LanguageSelector />
  <CopyMarkdownButton />
</div>

<LanguageContent lang="js">
  <div class="flex flex-row gap-8">
    <div class="flex-1 min-w-0">
      <JsContent />
    </div>
    <aside class="w-64 flex-shrink-0">
      <div class="sticky top-20">
        <TableOfContents headings={addPrefix(jsHeadings(), 'js')} levels={3} />
      </div>
    </aside>
  </div>
</LanguageContent>

<LanguageContent lang="go">
  <div class="flex flex-row gap-8">
    <div class="flex-1 min-w-0">
      <GoContent />
    </div>
    <aside class="w-64 flex-shrink-0">
      <div class="sticky top-20">
        <TableOfContents headings={addPrefix(goHeadings(), 'go')} levels={3} />
      </div>
    </aside>
  </div>
</LanguageContent>

<LanguageContent lang="python">
  <div class="flex flex-row gap-8">
    <div class="flex-1 min-w-0">
      <PyContent />
    </div>
    <aside class="w-64 flex-shrink-0">
      <div class="sticky top-20">
        <TableOfContents headings={addPrefix(pyHeadings(), 'python')} levels={3} />
      </div>
    </aside>
  </div>
</LanguageContent>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const langBlocks = document.querySelectorAll('.lang-content[data-lang]');
    langBlocks.forEach(block => {
      const lang = block.getAttribute('data-lang');
      if (lang) {
        const headings = block.querySelectorAll('h1, h2, h3, h4, h5, h6');
        headings.forEach(heading => {
          if (heading.id) {
            heading.id = `${lang}-${heading.id}`;
          }
        });
      }
    });
  });
</script>
