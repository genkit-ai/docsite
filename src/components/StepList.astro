---

interface StepItem {
  number: number;
  title: string;
  description: string;
  icon?: string; // SVG string
}

interface Props {
  /**
   * Array of step items
   */
  steps: readonly StepItem[];
  
  /**
   * Additional CSS classes
   */
  class?: string;
}

const { 
  steps,
  class: className = '' 
} = Astro.props;

// Responsive utility classes
const responsive = {
  // Container
  container: 'space-y-3 sm:space-y-4 sm:pt-4',
  
  // Step layout
  step: 'grid grid-cols-[auto_1fr] gap-3 sm:gap-2 mb-4 sm:mb-6',
  
  // Content spacing
  content: 'space-y-1 sm:space-y-2'
};

// Base classes
const containerClasses = [
  responsive.container,
  className
].filter(Boolean).join(' ');

const stepClasses = responsive.step;
const bubbleClasses = 'step-bubble';
---

<div class={containerClasses}>
  {steps.map((step) => (
    <div class={stepClasses}>
      <!-- Step Number Bubble -->
      <div class={bubbleClasses}>
        {step.icon ? (
          <div set:html={step.icon} />
        ) : (
          <span>{step.number}</span>
        )}
      </div>
      
      <!-- Step Title -->
      <h3 class="step-title mb-0 text-base sm:text-lg">
        {step.title}
      </h3>
      
      <!-- Step Description - spans full width -->
      <p class="text-xs sm:text-sm text-muted step-description leading-relaxed">
        {step.description}
      </p>
    </div>
  ))}
</div>
