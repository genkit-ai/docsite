---

type LinkVariant = 'nav' | 'inline' | 'card' | 'footer';

interface Props {
  /**
   * Link variant defines styling context
   */
  variant: LinkVariant;
  
  /**
   * Link destination
   */
  href: string;
  
  /**
   * Additional CSS classes
   */
  class?: string;
  
  /**
   * External link (opens in new tab)
   */
  external?: boolean;
}

const { 
  variant, 
  href, 
  class: className = '',
  external = false 
} = Astro.props;

// Inline animation token
const animation = {
  colors: "transition-colors duration-200"
};

// Variant-specific styles
const variantClasses = {
  nav: [
    'text-white',
    'text-sm',
    'font-medium', 
    'hover:text-gray-300',
    'no-underline',
    animation.colors
  ].join(' '),
  
  inline: [
    'text-white',
    'text-base',
    'no-underline',
    'hover:underline',
    'hover:text-gray-300',
    animation.colors
  ].join(' '),
  
  card: [
    'text-sm',
    'font-medium',
    'text-[#C6D2FF]',
    'hover:text-[#D6E2FF]',
    'no-underline',
    animation.colors
  ].join(' '),
  
  footer: [
    'text-xs',
    'text-gray-500',
    'hover:text-white',
    'no-underline',
    animation.colors
  ].join(' ')
} as const;

const linkClasses = [variantClasses[variant], className].filter(Boolean).join(' ');

const linkProps = external ? {
  target: '_blank',
  rel: 'noopener noreferrer'
} : {};
---

<a href={href} class={linkClasses} {...linkProps}>
  <slot />
</a>
