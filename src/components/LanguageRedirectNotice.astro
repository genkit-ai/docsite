---
// LanguageRedirectNotice.astro
// Component that displays a notice when content is not available for the current language

export interface Props {
  customMessage?: string;
  customMessages?: Record<string, string>;
}

const { customMessage, customMessages } = Astro.props;
---

<div 
  id="language-redirect-notice" 
  class="language-redirect-notice"
  data-custom-message={customMessage}
  data-custom-messages={customMessages ? JSON.stringify(customMessages) : undefined}
  style="display: none;"
>
  <div class="notice-content">
    <div class="notice-icon">
      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z" stroke="currentColor" stroke-width="2"/>
        <path d="M10 6V10L12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </div>
    <div id="redirect-message-content" class="notice-message">
      This content is not available for the selected language.
    </div>
  </div>
</div>

<style>
  .language-redirect-notice {
    background: var(--sl-color-orange-low);
    border: 1px solid var(--sl-color-orange);
    border-radius: 0.5rem;
    padding: 1rem;
    margin: 1rem 0;
    color: var(--sl-color-orange-high);
  }

  .notice-content {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .notice-icon {
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  .notice-icon svg {
    color: var(--sl-color-orange);
  }

  .notice-message {
    flex: 1;
    font-size: 0.9rem;
    line-height: 1.5;
  }

  /* Dark mode adjustments */
  :global([data-theme="dark"]) .language-redirect-notice {
    background: var(--sl-color-orange-low);
    border-color: var(--sl-color-orange);
    color: var(--sl-color-orange-high);
  }

  :global([data-theme="dark"]) .notice-icon svg {
    color: var(--sl-color-orange);
  }
</style>