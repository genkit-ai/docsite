---
export interface Props {
  languages?: string[];
}

const { languages = ['js', 'go', 'python'] } = Astro.props;
const currentLang = Astro.url.searchParams.get('lang') || 'js';

const languageLabels: Record<string, string> = {
  js: 'JavaScript',
  go: 'Go',
  python: 'Python'
};
---

<div class="language-selector" role="tablist" aria-label="Choose programming language">
  {languages.map(lang => (
    <button 
      class="lang-pill"
      role="tab"
      aria-selected={currentLang === lang ? 'true' : 'false'}
      aria-controls={`content-${lang}`}
      data-lang={lang}
    >
      {languageLabels[lang] || lang.charAt(0).toUpperCase() + lang.slice(1)}
    </button>
  ))}
</div>

<!-- Language selector functionality is now handled by the unified page manager -->

<style>
  .language-selector {
    display: flex;
    gap: 0.25rem;
    margin: 0.5rem 0 1.5rem 0;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid var(--sl-color-gray-5);
    align-items: flex-start;
  }

  .lang-pill {
    padding: 0 0.5rem;
    border: 1px solid var(--sl-color-gray-4);
    border-radius: 0.75rem;
    background: var(--sl-color-bg);
    color: var(--sl-color-text);
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.75rem;
    font-weight: 400;
    min-width: 2.5rem;
    text-align: center;
    line-height: 1;
    height: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    vertical-align: top;
    box-sizing: border-box;
    margin: 0;
    font-family: inherit;
  }

  .lang-pill:hover {
    border-color: var(--sl-color-accent);
  }

  @media (max-width: 50rem) {
    .language-selector {
      flex-wrap: wrap;
      gap: 0.25rem;
    }
    
    .lang-pill {
      padding: 0 0.75rem;
      font-size: 0.875rem;
      height: 1.5rem;
      line-height: 1;
    }
  }
</style>
